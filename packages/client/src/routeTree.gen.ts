/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppAccountImport } from './routes/_app/account'
import { Route as AppVehiclesTrainsImport } from './routes/_app/vehicles/trains'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountRoute = AppAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)

const AppVehiclesTrainsRoute = AppVehiclesTrainsImport.update({
  id: '/vehicles/trains',
  path: '/vehicles/trains',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_app/account': {
      id: '/_app/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/vehicles/trains': {
      id: '/_app/vehicles/trains'
      path: '/vehicles/trains'
      fullPath: '/vehicles/trains'
      preLoaderRoute: typeof AppVehiclesTrainsImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppAccountRoute: typeof AppAccountRoute
  AppIndexRoute: typeof AppIndexRoute
  AppVehiclesTrainsRoute: typeof AppVehiclesTrainsRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAccountRoute: AppAccountRoute,
  AppIndexRoute: AppIndexRoute,
  AppVehiclesTrainsRoute: AppVehiclesTrainsRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/account': typeof AppAccountRoute
  '/': typeof AppIndexRoute
  '/vehicles/trains': typeof AppVehiclesTrainsRoute
}

export interface FileRoutesByTo {
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/account': typeof AppAccountRoute
  '/': typeof AppIndexRoute
  '/vehicles/trains': typeof AppVehiclesTrainsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/_app/account': typeof AppAccountRoute
  '/_app/': typeof AppIndexRoute
  '/_app/vehicles/trains': typeof AppVehiclesTrainsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/signin' | '/signup' | '/account' | '/' | '/vehicles/trains'
  fileRoutesByTo: FileRoutesByTo
  to: '/signin' | '/signup' | '/account' | '/' | '/vehicles/trains'
  id:
    | '__root__'
    | '/_app'
    | '/signin'
    | '/signup'
    | '/_app/account'
    | '/_app/'
    | '/_app/vehicles/trains'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/signin",
        "/signup"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/account",
        "/_app/",
        "/_app/vehicles/trains"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_app/account": {
      "filePath": "_app/account.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/vehicles/trains": {
      "filePath": "_app/vehicles/trains.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
